foreign [Music] for us because for us majority of the orders get placed during the okay so this different from some of the other e-commerce platforms were large percentage of the GMB comes during Festival sales at a BAU level we do more number of artists and Flipkart in Amazon individually that was when we got introduced to social commerce key people are now leveraging social media Toto Commerce and this seems to be a trend which is starting right so we thought okay it seems like a good Market huge opportunity of converting of making this offline Commerce go online and bringing inefficiencies right one of the rituals that we have is listen or die we call it LOD attorney so whenever a new person joins of me he is given a list of users IDs and so priorities and this person would then go back and talk to them to understand their problems right and to relate to those problems and we should have strongly did a different company mostly the sins are backed by data there are hundreds of analysts business folks just looking at data for making decisions uh the plan is to have invest more on the eyesight you said right I think the last one year we have increased years are in Steam by about four eggs at least so a lot more Investments going into real-time personalization it&#39;s fantastic time to be in Tech specifically in India because I think this is a time when you see law of innovation happening and increasingly see the type of innovation which is happening it&#39;s more solving India&#39;s specific problems hi welcome to yet another episode of scalarpod and today we have with us Sanjeev from mishop uh thank you sanchief for taking out your time happy to be here right so we will get started with the first question which usually I asked to all my guests as nice way to start a conversation and I get a lot of different answers because lots of people in different stages of companies and all so what does a day in the life of a CTO of me should look like and so imagine that that day is very different for every CTO yeah yeah exactly so that&#39;s why what your answer I think yeah I try to get up before seven in the morning three days a week I have reserved for exercise okay standard basic weightlifting and during switch the remaining three days or two days is generally for really something it&#39;s either books blogs and then I think mostly my day starts at 9 30 or 10. and I&#39;m a lazy person one my day and how do we forced to start my day at 9 30 or 10 and hence I start the day with a meeting so there&#39;s one meeting scheduled every day at 10 years at least if not ninth that makes you start that yes forces me to show up in office and send it after that it&#39;s it&#39;s so they&#39;re like showing up is the biggest yeah step after that everything is easy right so yeah I think it&#39;s mostly about um and because it&#39;s very nice scaling phase there&#39;ll be a lot of fires to be handled but yeah after that such a meeting it&#39;s about either handling fires or getting involved into also the long term projects long-term discussions brainstorming sessions and uh yeah I think uh once every week I try to kind of stay connected with my direct reports try to understand what is going on in different areas and uh about one day which is roughly six to eight hours is reserved for my personal thinking time every week okay thanks because that is important like every week everyone&#39;s gonna take a step back and try to focus on a lot more long-term stuff which is maybe three or six months to one year out what else needs to be done deeper and trying to figure out what else is missing in the entire puzzle so I think broadly this is how it looks like so uh like probably a follow-up on that is uh like add a size and scale where uh Mishra is now I will probably spend a fair bit of time talking to people in Tech as well which is your demon then talking to the other stakeholder business and all so how does that get balanced like how much time does get shared between here and I think roughly I would say fifty percent goes into Tech like engineering specifically at every point in time we have let&#39;s say a big complex engineering project running in Petal across the condo for example right now we have let&#39;s say um kubernetes migration running okay data this year we&#39;ll have gcp migration bank so these are some of the engineering specific you know projects running for longer periods where I would want to get involved so that takes up about 50 percent will be additional stuff like let&#39;s say preparing for sale like three months before say you&#39;d start thinking about how do you support let&#39;s say 2x3x of the current scale but yeah so 50 is the engineering part right I think 30 percent would go into product and business right and uh probably 20 depending on what time of year it is it is either uh split I would say I think remaining 50 which is split between product people management and hiring include branding Etc but remaining 50 is split between three buckets the distribution varies throughout the year depending on a type of problems and pace of hiding the the context yeah so uh another question that I uh do ask uh you know when when uh people are starting to lead teams in the teams grow big and I like this question because I want to answer from you as well around this is that uh now with a fairly big team and all uh how much uh time uh do you get or also how often do you get to like get into the weeds get into the you know code actually sometimes and uh talk to your SD ones sd2s and then work with the projects that they&#39;re working on so how often does that happen A and B like do you miss it because he definitely I miss it when you start when we started right as the only coder rent here at build back-end Android front end everything so definitely I missed that but now I kind of try to restrict my involvement so I had taken this in two parts right one is killing inward on the tech side of things second is staying connected with people on the ground and both are important and both can be done kind of independently so okay involved in the tech side I do get involved but most of the time it kind of stays restricted until architecture level okay which isn&#39;t for most of the important architecture discussions which is decision switch is happening in the company um there I try to get inward and obviously not each and every architecture decision it&#39;s it&#39;s not possible to get involved in each of every important architecture discussion but I do kind of prioritize and selectively try to kind of be part of those brainstorming sessions that helps in understanding how is architecture evolving and what else needs to be done to support let&#39;s say not two days but whatever three years focused on the line so to escape beyond that on the people side stay connected with almost everyone at every level everywhere is again not possible we have roughly about 600 member or engineering team the way I do it is we have let&#39;s say for each level and we have multiple Parts multiple logs some combination of level cross pod sort of groups we create and then we you know get into group discussion and trying to understand what is happening on the ground what is not working well what is working well what needs to change and this happens at every level right from AC one two of sleep regular so and third is obviously coding is important and you want to be very close to crowd grab release it&#39;s generally hard to kind of contribute to production code frequently but and obviously you have a lot of craving for doing that and that I try to handle through my hobby projects which is maybe I&#39;ll pick up something over the weekend and try to do it and then extend for months but that is where I try to balance it out makes sense makes sense um so we&#39;ll come back and tell you a little bit more into uh misho&#39;s challenges and uh team and all um uh but I&#39;d like to first know a little bit about your journey so far as well so like how how did you like get into the world of tech and from there till till coming to me show how has the journey been like what are your experiences yeah first I was born and brought up in a small town in general most people would not have heard of it but uh yeah I think and the choice was pretty simple then uh this was early 2000s either become an engineer or a doctor these are the two options in small town wedding it was a broadly two preferred options that you think of there are some people who would pursue very interesting domains yeah but uh I did not and I think obviously your family shapes a lot of these behaviors people around you shape a lot of these behaviors and the part of the country where I come from I think job security used to be one of the most important problem that needs to detail is it is yeah and the sin was simple I didn&#39;t like I didn&#39;t have good memory and even now I don&#39;t have correct memory but uh so I didn&#39;t go with Biology I went with maths and hence I became an engineer but uh yeah I think it&#39;s not very clear what am I going to build as an engineer like building stuff but uh for coming into engineering and I&#39;m an electrical engineer I&#39;m not a computer science engineer but uh of it getting into college I just realized that in first year I think first year I spent uh starting to figure out what else do I need to do with my life it&#39;s a very difficult problem to you know get an answer to second year I started getting involved in robotics in my college to build some robots run some competitions and as part of Robotics you would obviously build rewards but you&#39;d also do some bits of programming to navigate that robot and you have a different basic complexities I think at that point in time it didn&#39;t seem very basic but yeah it was pretty basic complexities of navigating Parts but uh that is when I you know first and you have certain programming courses Etc yeah but that real life experience of building something seeing something move according to the way you command it I think that created a difference that was what have helped me get interested in let&#39;s say programming is an interesting domain let&#39;s explore it further and then I in my third year I did my internship again that was around uh building something on Android ecosystem uh and that is full-fledged programming and that is where I really got interested in okay this seems like something and then I did my b-tech projects Etc and again image processing and so on nice so I think it did touch slot domains and then realized that okay um programming is something that I would definitely want to pursue in my career and um yeah by the time I had figured it out he was placement season there is this I alien placement is a very difficult time generally like a lot of pressure like the certain companies coming in there&#39;s certain priority of companies from ID daily so and most IDs have this concept of day one yeah see how your immense pressure off okay and will I be able to correct even or will it go to D2 and companies are still okay but it&#39;s like about A1 and closely and you&#39;re trying to always excel at it so yeah I managed to get into Sony in Japan so Sony headquarters is in Tokyo and they kind of come to India for Selective rules and uh they haven&#39;t created even slot and I managed to get there so yeah that is how all of this started and uh so I was working with Sony in Tokyo for three years uh first one and half years was in uh the consumer camera division which was DSLR and cybershots nice so they&#39;re uh is building their application layer they have their own operating system real-time operating system on top of which they have a bunch of features so first one and a half years was that second one and a half years so I spent three years in Japan and second one half year was with Sony mobile again in Tokyo so there they are trying to Port kind of Sony has this amazing camera technology obviously they even pick a fact though correct I still have the xpf and from outside you can&#39;t even buy anything anymore but yeah correct and even today probably they made sensors that Apple uses is off so yeah the IMX yeah so I was on the software side but yeah even on the software side they have a lot of amazing stuff and that for any time Sony mobile used to be one of the top three cameras like they have this cameras 4K so yeah for the next one and a half years I was working with their Sony mobile camera division which was more like going into your Android open source code base and then uh so basically this is application in which most most people are familiar with where you could have build your applications and whatever Java recording and so on in years ago deeper you have Android Services layer so as you go deeper you have this Hardware attraction yeah which kind of their interfaces with your hardware and driver so as operating in this Hardware refraction and the driveway I was interesting I think did a lot of problem solving there this was just doing 15. then yeah then we jump back it came come back came back to India and jumped into status nice nice that&#39;s a that&#39;s a great so again a lot of it uh coincidentally a bit relatable because I also did my engineering in electrical only 12. and yeah same I think uh got you missed that decision of not choosing computer science then I I would say not I mean I think uh because uh when I a little later probably 30 or 40 of engineering and all when I was like the same like robots and all that we know all of the things they&#39;re right uh then I started saying that sometimes people who have not hired in the uh Taste of like actually working with electronics you know um sometimes it gives you a disadvantage uh another advantage that I felt myself was that you really understand the bare metal cost of what you&#39;re doing a lot of times uh right I mean not just about okay you&#39;re managing memory and all sometimes like okay I know the cost of the multiplayer operation is costlier than a plus operation yeah because you have gone down there and written the microcontroller code right so that I I have make sometimes it&#39;s like a Advantage also in a way because you know that down there what happens yeah and I think what may also used to think make me curious a lot was like uh School level education I feel like little tools and all you get to understand that okay what Boolean logic is zero once that you understand yeah you also understand that okay our let&#39;s say PN Junction works but what happens with above but what is happening in between these two three layers and that&#39;s something you get to learn if you are in electronics or intellectual yeah so I think uh I Do Cherish that I would say I don&#39;t uh I have no regrets that I did not take computer science in that time and about the Sony part like I was saying like apart from being a very big fan I used to work on this uh Sony&#39;s mobile division Xperia and the one which was based out of Sweden uh yeah so they had this free Xperia project where they would support a lot of Open Source developers uh so I was part of that project so uh probably might have written some shims on top of the drivers here in Sweden so you&#39;re right in Sony mobile you know had their headquarter in Sweden and graduated and most of the open source contribution of Sony back to Android ecosystem happen out of Suite yeah yeah yeah so so those people is running this team there so um and I got to work on that and I think uh that I look back with with a bit of Wonder at my own skills back then because I I did not know a lot of things about like uh fundamental stuff like I think I have written a bunch of C code uh without really having any formal knowledge of how she was like okay new orbit of java code and all but then I have to probably uh reverse engineer driver seeing header files and trying to understand something and probably not even understanding much of those compiler directives and all uh but but managed to let&#39;s say like uh because you guys would not open source the core camera driver because obviously don&#39;t do it yet I I could relate I could see that happening I think in Tokyo even then I think the philosophy was gradually starting to change but third before de facto kind of mode was will build something but will not contribute back to open source because there&#39;s something which is very critical IP red company yeah and so on where it&#39;s I saw that changing gradually but it was far from where yeah it should be so Sony used to contribute the uh the kernel itself because that&#39;s GPA yeah yeah um but the camera drivers and all the headers they would publish but not actual drive so from the headers view because we try to Port the latest version of Android which is not at least on that for it so but it was fun I think uh you know like trying to sort of hack around the code without really understanding that uh now after learning a lot more I think going back I wonder that how was I able to write those shims and all because I did not understand what&#39;s happening inside well that&#39;s the beauty of code right you can just look at in his basic logic so you can always look at it and do something and then see what the what is the impact of that change on wherever you&#39;re trying to test yeah and openly revert it and do something else yeah and I think that that way I think with with the electronics versus uh like uh pure software well things like the cost is very high Electronics you&#39;re doing a mistake like bunch of times it happened like you know character wire in the wrong software on a 3000 Raspberry Pi Goes Up in Flames uh that is that does not happen here you play button pause button lives are easier but software Engineers it&#39;s very easy I I could see and as again I think so many times and they&#39;re trying to upgrade their entire chip which is the chip that powers your most of the cameras we are trying to redesign that chip yeah into the to the point of the cost of making a mistake being pretty high they&#39;re gonna design that chip and obviously there are simulators to verify that design but they&#39;re only accurate to a certain extent it went into manufacturing and this is not my team this different division versions Hardware okay Adam friend again from Eddie Bombay was working in this project and it went into manufacturing of this manufacturing used to happen on Taiwan right not yeah in school in shape yeah so we have got the first batch and that had some bug in it oh and they lost like millions of dollars just because of that bug that is a cost of making a mistake in your chip production yeah and that too it was caught very early yeah that got into you know that got gone into the marketers if it was released the cost would have been much much higher yeah yeah so software I think the way we operate the cost is pretty minimal yeah which kind of helped in making those mistakes learning from them quickly and moving fast yeah yeah I think that Electronics well definitely I mean fascinating I I still remember uh I was um interning at this company Micromax they used to make a lot of movies yes back then in India and uh Qualcomm at the taken us on a tour to the Hyderabad office talking about their designing chips and all and uh I was interning when I was first year in college just but I just happened to be internet Micromax so they took me that same thing and that&#39;s the first time I um was I got to know about binning basically right so they&#39;re like okay we make a quad core processor one of the course does not work then we sell it as a dual core as like oh like the cost of mistakes your mistakes yeah I made a mistake like this you produce everything is quite cool Sava sold a single core service dual goal because stuff then you know this then it&#39;s not an intentional do a good thing yeah this is used if this how the boards are not working they just they manufacturing is same for all the chips because you start manufacturing the same way yeah is that you are able to you can&#39;t sell them as quad core because I was just so I have seen this in software industry as well like even in Sony cameras so the cost of software is negligible right in the sense that you if you have developed a particular technology here for camera the cost of deploying that technology on a low end smartphone of fixed speed and high-end smartphone XP is pretty pretty yeah marginal costs are very much but they&#39;ll selectively choose to not deploy it even though Hardware supports it because that is to create a differentiation for the customer yeah the the okay umbrella Market periodic exactly that is what you get customers to pay for but the incremental cost of deploying that yeah it&#39;s very manipulated it&#39;s almost close to zero right if they&#39;re selectively go and turn off certain feature Flags in your low end smartphones so you don&#39;t go get those features so the interesting way of wearing learning business yeah um but Sony I think it&#39;s only like some legendary stories out of Sony as well because I remember like when that Fukushima thing happened yeah I think for two years phones did not have cameras above 8 megapixel because there was I think that like reduced production or something like that I think that&#39;s that&#39;s really like uh I would say a very different level to be where like if you are not able to produce stamina like across the world no phones have good camera yeah I think it&#39;s it&#39;s because they you know own the entire image sensor manufacturing mostly companies use ad image sensors right so so then like after Sony uh you like came back and uh how was the journey I would like to know like from from like how things got built from day one and how did like I think you&#39;re saying that you were the one was adding the code like there and so how did it go from like one person two hundreds of people it was interesting survey so yeah I think in the beginning it was me and with it uh uh as a tech founded he was an old dick founder so all things take kind of I was handling all things not like he was handling but you didn&#39;t you know work that way even some bits of non-tech I had to handle for example doing deliveries as well I couldn&#39;t call IT Tech that&#39;s interesting story I think we we kind of started something in 2015 mid to and 15. China final fundamental hypothesis always was that India is a primarily kind of uh offline Commerce driven economy right most of the e-commerce happens offline even today more than 80 5 to 90 happen Softly and the the incumbent the covers platforms then which is Amazon Flipkart were mostly targeted towards Brands and mid to high income segment people but that is what really near real India you know can&#39;t afford brex which is mostly your uh people from low dominating up segment here to and Beyond so we thought okay it seems like a good Market a huge opportunity of converting of making this offline Commerce go online and bring in efficiencies through that the first model I have tried was I think uh what we called fashionir which is fashion nearby which is essentially trying to when we started from code mangala and it&#39;s just that so it was more like people had options of ordering options off looking at for fashion shops around their locality in a date trying to buy something by sitting at home think of it as we give a fashion got it so you order food from restaurant this was more Lottery professional right fashion from Fashion Outlet fresh hours the way it started was yeah we both took a foreign and I had a Sony camera which I had brought from Japan so you just click private pictures come back do some photoshopping edit it and then upload it on an app we&#39;ll get some orders maybe one to ten orders per day and we&#39;ll split the deliveries the times with it we&#39;ll do the delivery at times I will do the delivery which is picking up from a warehouse or from one of these shops right Little League to customer and uh yeah and this was during the rainy season which is mid of middle of the year which is we started in we launched in August and this is the beginning season in Bangalore so at times you would get wet while delivery and we had Capital delivery boy but that guy wouldn&#39;t show up most of the time because they want because it&#39;s your own money you go and spend other and hiring greater careers you might have multiple because you&#39;re trying to optimize in the past but that is how one of this started right and we Riot for a couple of months realized uh the multiple problems uh with this hyper local fashion model biggest one is you just cannot offer the amount of selection which is required okay it&#39;s very limited in terms of the variety that you can offer and uh the good thing was we are working with lot of smaller uh shops there right then the particular behavior that these shops kind of show that because you spend a lot of time in these shops clicking product pictures trying to understand what is happening whenever some whenever a customer used to walk into their shop they would note down their phone number and add them to Whatsapp group oh and then whenever uh they got a new assortment which is new products okay take product pictures and send it to that WhatsApp group okay we have this new thing if you&#39;re interested just coming back right so that was when we got introduced to social commerce people are now leveraging social media to do Commerce and this seems to be a trend which is starting okay yeah I think we realized that social commerce is kind of interesting phenomena which seems to be picking up and when we discovered a lot of Facebook shopping groups which are dedicated to buying and selling their lacks of uses added where people lose just two Commerce and uh yeah I think that is how misho&#39;s first version started which was more like Shopify uh Indian version of Shopify for um for individual shopkeepers which is more like enabling people who are trying to sell online right by providing them storefront which is they can list their product pictures half payment Gateway options integrated have basic order management and so on right right and most of the people who started using this wear Housewives were running their own online boutiques through WhatsApp so they would come to me show create their own shop start sharing those links in Facebook groups WhatsApp groups and so on okay then they would do with their own fulfillment so that is how misho&#39;s first version got started and since then obviously a lot of things have changed but uh yeah until then it was just me and with it so I would build yeah that code during daytime during night time whenever I would get time after deliveries and after photo editing so I&#39;ve uh two questions uh probably on the earlier side of the journey uh here um one is that you know like integrating with say platforms like WhatsApp and you know WhatsApp groups and Facebook groups and all which like I guess back in the day not all have very nice looking apis and all of that stuff right so uh I think one is like uh how uh what were the tech challenges uh like to to sort of integrate with sort of non-conventional uh mechanisms or I think information sharing and all of these ready at that point in time the challenge was not about how do we integrate with Facebook and graph apis had kind of showed up then so Facebook had started implementing graph it pays around 13 14. yeah um so until he so in 2015 we had fairly decent uh graph repairs available for kind of sharing new posts to groups to to your own wall and uh even sharing to Whatsapp was there there are certain limitations on let&#39;s say how do you share multiple pictures with different text content against each picture yeah I think that was a big limitation that WhatsApp sharing had then it has even know I do remember really that we did build something for and because our TG was do this throughout the day which is they would be in touch with their own WhatsApp groups but you know conversation that you&#39;ll have in those WhatsApp groups is some customers and then the flow would look like she&#39;ll go come back to her shop and share a product picture and URL of that red kurti to simplify this entire ux Toyota built something which we called misho Bubble this essentially your messenger sort of bubble which is draggable so whenever WhatsApp when I showed up in the foreground in Android we carried all that bubbles and when you tap that you&#39;ll see your own product picture so that you can very quickly select and share it without switching apps see exactly so that is one kind of optimization that we brought in right right but uh we ought to this I think uh there&#39;s been fairly tough okay sort of Integrations with Modi black mobs right the next question is uh probably not just a like day Zero stage but also as you probably already said the team grew like you know sitting in cool manga and HSR and you know uh like obviously extremely Urban techy crowd who will be building this app and it uses being like you know going into smaller towns Housewives running boutiques and all um so what&#39;s the I would say journey of a engineer admission to develop that user empathy because I think the chasm is very wide there right between the user and who is making yeah you&#39;re right I think it&#39;s very difficult and that is where one of the rituals that we have is listen or die we call it LOD attorney basically irrespective of whichever function or a designation whichever function you&#39;re part of a whichever designation you have you need to do user codes so whenever a new person joins of me elf he is given a list of users IDs and a suppliaries and this person would then go back and talk to them to understand their problems right and to relate to those problems and then come back and kind of present insights from that and see that close into the product development but that is one big step which helps in bridging that Gap otherwise you are right you can enter into this situation where so in simpler problems like mostly techies that you have that we have and most people in Bangalore will have smartphones have certain memory performance will be great always on 4G always on 4G so whenever you test your Android code on such a smartphone you&#39;ll never encounter problems that is when you kind of uncover and discover a lot of problems so being able to relate to that is extremely important that is where initially you know we struggled with this initially we started with this in fact to the extent that there&#39;s a time when we were talking about this WhatsApp sharing flow so we implemented this where you can kind of select uh let&#39;s say 10 images those 10 images images get downloaded in background by a click and then uh share intent kind of opens a WhatsApp whether you can select the conversation fairly simple flow takes about few seconds to do that on 4G the catches 4G because when you move to 3G so hard when you move to a 4G which is not stable it just did not work and when we launched this flow and this is back into in 7D when we launched this flow somehow people said it just doesn&#39;t work and we didn&#39;t realize what is happening and uh when we talk to them we realize uh we just keep showing loading it doesn&#39;t work and that is when we realized we&#39;re just doing it wrong like we&#39;re testing it wrong we need to throttle the manual that test State we can&#39;t test it on our good phones yeah it has to be low info but yeah since then we have been evolved our rituals but listen or die kind of has sticked with us and people not just do it after joining but also at some frequency everyone is kind of enabled to do that make sense make sense so uh we uh I mean from from then where it was largely like you know people sharing on WhatsApp and all I think me show now is like a much larger property platform kind of a thing uh so you know I I would say like techwise it&#39;s a whole different scale but how are the challenges changed like I think how to share photos on WhatsApp is not your day and night challenge now right something else right so what are the tech challenges today adding its beta generate and uh most of the challenges that we had over the last five years are more scaling related which is and those are the interesting ones for example in 2021 this entire one year of 2021 we grew by 5x in terms of number of orders traffic and everything um and uh couple of years before that and that is when so basically and maybe take a step back and I&#39;ll roll it back to when the marketplace started so that is so currently if you see me shows a Marketplace between suppliers at in customers here on the other side the fundamental version of this Marketplace MVB was built in 2017. now we think of it the text tag that we had was very non-traditional let&#39;s say oh very traditional which is we chose PHP as our Tech stack which is not the choice nowadays even then it was not the only reason we had PHP was because I was comfortable in that right and I didn&#39;t want to spend couple of months uh just trying to learn and something new basic Java but it just said I haven&#39;t did not do web development inside maybe we would have taken a month at that stage are iterating fast being able to test out your ideas very quickly is the most important thing everything else doesn&#39;t matter so yeah we built it in PHP and you know it&#39;s a it&#39;s a language that works but Beyond certain scale both in terms of number of people and on the user side you&#39;ll start saying problems it&#39;s not a very work in the history language I would say so again we obviously realized that fairly early and we started moving to microservices uh and then we started with monolith and then move it to microservices and all the newer Services were built in Java so now Java shop and springboard and it is so first biggest downplay was a big learning for us and this is early 2019 at this point in time we had a monolith which was a PHP model maybe it had 60 of the board base was in PHP 40 in a bunch of services in town elasticsearch we had just introduced uh which is for powering search our feeds used to run directly from database we did not have a caching layer in between okay now you might question why don&#39;t you have a caching red but I mean the simple is the best the Simplicity is the best video we&#39;re going to operate and just need they need data they need cash at that point in time and hence you don&#39;t need the uh to introduce another component which increases the complicity management overhead and so on so yes your feeds getting served to database and uh yeah we had sale starting at ADM suddenly traffic started showing open systems went down because database choked and until then we had put it&#39;s a lot more Focus was on the moving fast because that is extremely important any other organ of I trade very quickly solve a lot of problems while doing that even cut a lot of pig debt here which is PHP is detected only does detect it a bunch of other things so that was a weight turning point it was from that day onwards and I&#39;ll talk about how did we hunt on that day but that day onwards we have structurally invested certain percentage of bandwidth of international could vary over the period but that per bandwidth kind of stays at an inflection point in companies where platform teams get created and all of them yes and we did not create platforms yet but we did out of cardboard certain percentage from each of the pots and said see your job from today is to make sure we support the scale of not today but two years three years so I&#39;d became the foundation I think but yeah on that day fortunately it was a bad time everything we were down for so either block it went down somebody try and restart Works solution it restarted um I get it right now it&#39;s pretty bad and then suddenly someone kind of because we had elastic search running and uh we had all the products kind of indexed in elasticsearch and someone was thinking even before this of Shifting all the feed and a source to elasticsearch for nonsense use cases as well okay so fortunately that was under development obviously not tested Etc so in that one hour someone you know a few people kind of got together did a lot of testing was your ninja stuff and then we could have got the stuff we got the got the app back online feed Source got change from database tool from my SQL database to elastic set but that was a big eye open I think since then we have considered invested a good amount of bandwidth that varies from uh 15 to 30 percent depending on the criticality you detected across different teams right but that has helped but yeah I think that was the foundation after that the thread of challenges that we have kind of incurred was um back on the screening site which is uh let&#39;s say uh on the elasticsearch side it has been a better learning curve for us yeah uh wearing um in the in the beginning we didn&#39;t have circuit breaker patterns Etc and obviously as you grow your architecture becomes very complex said you have hundreds of services running now we have uh bunch of stateless aggregators powering each real estate in the app with the end of your stateful layers and then there is circuit breaker in between to make sure we at least partially kind of show information if something goes down here can focus on recovering quickly and so on even in the recent sale that we had we thought of a bunch of interesting stories but the last sale that we had currently we operated about four 15 420 lakh requests per second 4.2 lakh requests yeah four by two lakh requests per second overall yeah and back in and um yeah a lot of interesting stories there uh during one of the I think day two of scene or rather day one of sale that we had um during uh the site before Diwali we have a hotspot another latest shards and uh in order to debug that it&#39;s very difficult because it&#39;s a production system how do you quickly take an action you could see that CPU kind of increasing here so how do you know what is happening when someone came back with a suggestion key we will run monitor command and then if you&#39;ve run more data command on radius but what happens is when you run that command the entire that is freezes for 10 seconds but that is the only way to kind of understand what is happening at that snapshot quickly yeah mostly other ways you kind of spin up and you cluster and do all of that but we don&#39;t know the problem here then you could see the CPU increasing you could see traffic coming up her Peak is afternoon 1 pm and this was roughly about 11 o&#39;clock in the morning so you know that it&#39;s starting to survive the the peak so you have to do something there&#39;s no other way so someone then monitor command a couple of seconds very limited failure but we realize okay this is a product which is screening problems and but these kind of situations happen in War Room Shower day which is maybe more interesting and uh looking back it&#39;s more funny but during that period you see that you have that editors in Rush yes which kind of makes it worth it right one is obviously like once you reach this particular scale and there is an inflection point and you have to start clearing your Tech debt and you have to start like say like your sales are like worse right then you have to prepare for worse you have to have the correct equipment to go to our video uh but the other takeaway also if it is uh and I would say correct me if I&#39;m wrong but see what three four years into a me show and you&#39;re still like for example product feed is coming from MySQL TV still which is also in a way like a good learning that you know till the point where a simple stack can survive you should keep on doing that and not you know spend time on over engineering something and then I&#39;ve seen a lot of times you know uh very young founder starting their first startup in a few months into it and you know without any users and they&#39;re thinking of okay we&#39;ll do kubernetes and a cache and nomination I think simple is the best way of realized so you don&#39;t have so many people to kind of handle these complexities right during this ideal series see we had maybe 10 engineers right after CDC before series DB had maybe 30 40 Engineers that&#39;s it right right this stage and we in fact did not have a infrastructure guy until CDC which is until 10 15 15 odd engineers we did not have interested I was sorry I was the infrastructure is a remote Sky who would kind of manage all the infrastructure now you just cannot manage kubernetes without having dedicated people looking at it is just not possible yeah we had now liberating we could have done that a couple of years earlier maybe we should have but it did not matter I think as long as you keep the stack simple even on the architecture side when we have a layered architecture which is as far as possible we try to in novel yet architecture works as let&#39;s say you have different layers Services across different layers in the architecture and all the calls that we have across different services are either to the downward to the downstream into into a lower layer yeah or within the same layer but never enough which simplifies your scale management because now you know that the scale on the third layer is very dependent on how many services are calling this third layer there&#39;s no cost connection going on here there is no layer one getting called by layer 2 again here kidding calling back layer one so this Simplicity kind of helps in traffic management handling these sales scaling for these sales fairly more predictable and here are an example the natural tendency when we operated the scaling we have for example we currently have about 140 million or annual transaction uses overall uh monthly active users will be also received number 180 under 30 million monthly active people open the app at least once and during sale time obviously the increase in traffic is more 50 maybe subtle core so it&#39;s saying is that this K when you operate the natural tendency is to before mega sale do a lot of perf testing right right and proof testing is costly one in terms of um server cost if you want to really do perf testing at rsky it&#39;s very costly a cloud Bill runs in millions of dollars if you want to test out for a traffic which is a factor of this yeah and millions of dollars are saying in in uh per month but even if you want to test it for a day it&#39;s a subsequent it says substation cost there&#39;s also people lost to it when you do puff large part of the bandwidth goes into that somebody would be sitting there got it and it&#39;s hundreds of microservices so we have tried to consciously stay away from the weak puff and there&#39;s very counter iterative because you have to do puff to live through Sail so here we rely a lot more on distributed ownership which is so we have a bunch of PODS and we show each part once a bunch of services each service is a has ordered we rely a lot more on that person&#39;s judgment to understand what is a bottleneck in scaling this service for this season&#39;s sale or for the next day and this person is confident that I&#39;ll be able to handle the scale we don&#39;t recover import and which is where we believe in people more than technology which is we rely on people&#39;s judgment to you know say that okay I just don&#39;t need to do a book and there&#39;ll be certain and when you apply this judgment you&#39;ll have let&#39;s say 10 of the services where people are not confident and feel that something will break and what will break is not known yet and hence I&#39;ll do a perf to uncover that that reduces your cost both on infrastructure if people drastically from 100 to 10 percent okay so that helps a lot interesting interesting I think it&#39;s going to uh actually uh ask a little bit about this which I&#39;ve answered some of it like about uh you know like asking people uh like with your team&#39;s project be able to handle the scale a lot uh what I was going to ask is um like uh e-comperts obviously that seasonality around sales is like that they&#39;re like nerd right so so I think for for the tech team uh right and I&#39;m I would say asking both from a team philosophy perspective as well and how their Tech actually uh stands up to the challenge like when in the days you&#39;re going up to the sale right so are there any special rituals are there any particular processes that you follow uh are there any very strong learnings from there like you know when you&#39;re going into one of your Blockbuster sales and all of that so how is that time looking for the sale sure so I&#39;ll just uh want to address that one point which is sane is important for us but it&#39;s not a library for us because for us majority of the you know orders get placed during the okay so this is different from some of the other e-commerce platforms where large percentage of the gmv comes during Festival sales for us sale helps in retention which is bringing users back and building that habit but large part of the gmv spread throughout the year okay okay but having said that sale is important because you do see foreign earlier in this very interesting story like 2019 January in this before that Mega downtime that is discussing Miranda first or second sale at that point I&#39;m used to do and maybe eighty thousand nine thousand one lakh orders per day what yeah something along that can we we basically did double which is the orders doubled on that sale day for the first sale we didn&#39;t do anything which is very counterintuitive place you know you&#39;re running sale you would go check your databases skill work in yoga do you want to double then database do you have to go to next year people didn&#39;t do anything it is it looking back that is not the best but we did not we because nobody knew what is the scale that it will expect on the same day that was the first scene yeah song is eight ten percent singing twenty percent with 200 for the order database TK it worked after that obviously once it works we are very eye-confident it will look so people have very high confidence kid now too we don&#39;t need to do anything for sale in the mega downloader that happened was second sale okay people said we don&#39;t so need to do anything architecture that we have built works very deadly to let down tape but after that I think we&#39;ve started taking sales uh very seriously uh now we have this concept of we run one sale every month and then the biggest sale is around Festival right before the oil but monthly sales are generally okay what we do is uh uh I think about 12 hours or rather 24 hours before saying we kind of put a infra freeze sort of thing which is all the scaling that needs to be done and ec2 is kind of are on auto scaling so that doesn&#39;t kind of matter databases will have to be scaled once in a while just a function so maybe today it&#39;s working you might have to scale up if for the utilization so all the infrared scaling which needs to be done uh same for radius is right but uh we&#39;ll have to write 24 hours before the same for certain specific ec2 service Services which are running on ec2 there we have install them will have to be pre-skilled because suddenly we see this pattern where um we write at 12 in the night so you&#39;ll see your traffic going into certain parts of the app which needs to be pre-skate because those certain species so there we have built a system where people can kind of put those values put up so it&#39;s the basically schedules universities so that works for your monthly sale because it&#39;s a simpler problem to have then we have this concept of waru which is the people from each part parts uh basically one service owner one person per service yeah it could be one person managing materials multiple services but basically someone in that wardrobe who is just making sure everything is working as expected now this is a great opportunity for junior engineers the learning happens when something breaks and we hope that things don&#39;t break but whenever a junior Engineers have kind of monitoring that is when they get to understand something nuances how does that&#39;s a traffic pattern correlate to your increase in CPU how does your increase in CPU in database changes your latency and so on yeah to support learning curve watch YouTube that is what we have done now which is mostly War rooms on monthly sale is run by SD months and tools yes that is a great thing I think uh two years back there is not the case there it used to be only lead Engineers but now it has all shifted to Junior Engineers that helps in developing stronger ownership absolutely so that is there and then what we have is sale reflection which is every month after the sale we are going to get together every part kind of presents what is happening in their own area head is good focused on what is way of working with what is not working with and there you do uncover scaling bottlenecks which you then put it back to your Tech backlog which is tagged back from and team kind of start Clicks in it so that is the storyboard monthly sale make a cell that we have like before season that is different there and this time uh and last I it was Virtual Worlds because we both have people yeah but so so I think couple of weeks before said we kind of started discussing together on kind of service owners or lead engineers on what is the scale that we expect overall in terms of let&#39;s send our users traffic app opens whatever how does that translate to your own individual traffic and based on that how its scaling needs to be done for a stateful layers which is that is database and so on kapha Etc all right there&#39;s an interesting problem statement on the data engineering Skilling which I&#39;m completed but there is more back in serving notes yeah so people that often go back discuss there&#39;s a program management because we don&#39;t have I don&#39;t know 30 years of teams uh managing this so um yeah and then people come back and this is scaled a couple of hours before midnight we start running the War Room and this war room kind of goes on for five days because it&#39;s a five DC fortunately this time I think it was very interested less I would say like there&#39;s nothing happened like it was fairly straightforward apart from that hot shouting issue and couple of other one minute or so sort of issues things were broadly fight and uh it worked well but yeah even this time we did not do buff testing for majority of the services and it worked well safety and and you&#39;re saying something about the data engineering skill read engineering has been a very interesting General so we started with redshift right we started with database he stage we know that direction fit there&#39;s one mustard and uh there&#39;s this one guy from the business who needs data for only this guy why do you want to provisional sleep I just gave him access gave him at night make sure you don&#39;t run complex queries make sure you don&#39;t change it then ah we didn&#39;t give him read write accesses Works work well for a couple of years and then one day he made a mistake this guy ran a complex query and didn&#39;t even know this is protection not a great situation to beat but this is 2018 later and eat and for reference like this was right after CDC so I&#39;m saying it&#39;s that late in the journey even then we don&#39;t have like we have this kind of setup where people are directly accessing production data which is okay like that is it&#39;s working again in parallel we had started investing in RedTube in fact we induced hebo as well uh hebo data is one of the components which provides pipelines and there is Handful in the beginning so basically it&#39;s more sales for business they can just Engineers can connect it in business can figure out Richard worked for scale um which was bad and uh since then data had been a struggle for us for at least a year and had to migrate order itself completely and we should have strongly did a different company mostly the sins are backed by data there are hundreds of analysts business folks just looking at data for making decisions so that we move to Delta Lake Presto spark hi evolved that setup and that is working with the last one year we have reached a stage where um even your standard managed Services kind of start freely for example managed Kafka of AWS just did not work it&#39;s short our skin is not but it&#39;s there but you expect many services to work at this scale there&#39;s just a lot of problems so we move too confident for Kafka this is for data platform as well it is for the backend um then uh I think mix plan and writing mixed panel we had miscellaneous user then integrated from day one that worked really well for first three four years then it started breaking so basically that is Journey which is you in the beginning you use as much sass as possible to ever help you get it up to speed and money but every size will bring at some point yeah and viewers and then I think for a deck leader that is the challenging part which is you have to anticipate when it is going to break before it breaks and because migration will take time and the experiment take time we&#39;re not replacing McFadden we have we have mixed panel but uh uh so the delay Sports from expand did not work as expected so we had to build our entire in-house pipeline for sending Beaver elements from Android app directly to backend when combining it with transaction and so on so there I think uh has been a very interesting Journey where we also introduced recently um a reactive Paradigm within data ingestion layer which can then help us in scaling very quickly at a very cheaper cost in fact this year a big win for us was we reduce our server cost per order by half nice and uh without degrading user experience right that being uh despite scale increasing our cost has reduced per order by half which has been a great achievement if your team publishes and blogs anything about it will be we love it is then that&#39;s a good point I think we have published a Blog on that reactive Paradigm for ingestion layer of data black hole right which I haven&#39;t got surface in Amazon Etc as well where they&#39;ll know learnings on how do you ingest data in a very cost efficient manner right overall boss reduction we have it and there&#39;s there a lot of learning switch will definitely love to publish at Subway towards the end I just want to come a little bit on the questions on the team and the people itself because Tech I think uh great great set of stories I think lots of learnings um so the team I think uh a couple of questions on them one of them is uh like right now you have been speaking a lot about parts so I believe like your team is uh set up as parts so was it like I mean it would not have been like this from day one I guess right when you start off with very similar structured layer structure and then there&#39;s communication flow immediately yeah so so sometimes like teams I&#39;ve seen like this product with three four people then it&#39;s more this domain where like where the Android guides they&#39;re the background guys like that and then you end up with parts like how has it any been for you and like when did these inflections happened so I think that has been the journey which is um uh it started with uh seen people being T is being organized as per expertise and they would not have infra there for a long time so we had only back-end front end and Android yeah even iOS we satellite it was for RTG I think highest nutrition is pretty low so I think somewhere around um 2019 we started thinking about how do we organize people in parts and that is where we kind of started dividing the entire bucket list the entire value chain uh into some cuts which is demand Supply within demand side will have user growth you&#39;ll have check out you&#39;ll have different parts so basically some combination of dividing the entire business into different parts yeah and the entire app into different bytes and then we kind of created Parts on the backend side so let us first invention one which is we had a central Android team schedule and with a front-end team back end was divided into different parts and each pod had a product manager design and so on right but Android was centralized right and the reason for that we did not have enough Android people what type of hiring happens right right so it&#39;s a trade of it what is optimized for velocity you don&#39;t need to do a lot of cross spot prioritization but there&#39;s inefficiency in terms of you need more people there you did it at least 100 in that point right at least one back in person there might not be enough work for that person always always right that is inefficiency so that&#39;s a trade-off and at some point in time during the journey you are okay with this trade-off because as Steam grows need for cross polarization increase in that support them it&#39;s just impossible you just cannot prioritize a supply-side project with a demand side project both are the important critical pieces velocity and efficiency takes over the timing so yeah and then we run this we realized we are nowhere in a stage where we can go full pot uh like 100 watt suction that is when we surround somewhere around 20 20 where we divided an entire interesting team into fully self-sufficient cross function field board structure so Android front end back end I uh the design product everything kind of within that point so yeah I think that has been working fine and apart from this we I think as late as made of last year we had Central data scientist because data science team started about a couple of years back but seen a lot of benefits here but uh the team was pretty small we had only about 10 to 15 year scientists until beginning of last year now we have about 50 trillion it is so it&#39;s a big team until certain level you just cannot spread it into pots we all certain level for particular expertise you&#39;re okay with spreading it because you&#39;re gonna afford to okay right right uh and then I think one last uh question before we arrive up is like going ahead uh like uh how do you see like like the growth of your uh Tech beam in particular like you know what kind of areas do you intend to focus more on what kind of uh sort of uh domains I mean I&#39;ve been hearing about people investing a lot into AI you know also what kind of areas do you want to focus on and then what sort of people do you do intent sort of add to the team in military than on the horizon sure but yeah I think uh overall uh the next couple of years business-wise they have to focus areas one is profitability second is skill itself which is you want to grow but to become profit in this way the repercussions of that on the engineering side is you definitely need more Engineers so will last two years consistently probably before that as well we have every year doubled it so which was a big very difficult thing to do but want to maintain their talent Mark we have a pretty decent darling more it&#39;s doing it is very hard you need lot of interviews people have to spend a lot of time just interviewing people but I think that is required because the skill at which we operate at a BAU level we do more number of orders and flip part in Amazon individually so at this scale despite that let&#39;s say we have about 600 or engineering team not a comparison of a lot of competition in terms of number of people but I think at this complexity you need a lot of Engineers to kind of help you solve problems for the next one year uh uh the plan is to have invest more on the eyesight you said right I think in the last one here we have increased years are in Steam by about 4X at least so a lot more Investments going into real-time personalization so until now we&#39;re more driving in batch more sort of personalization so that is giving us lot of results beyond that engineering side scaling seems to be continues to be an interesting problem statement and you&#39;re right we&#39;ve set up platform teams multiple platform teams across different docs so having lot of interesting challenges around how do you scale databases how do you make it more elastic how do you quickly upgrade that extract of a database without needing a lot of program management how to do it in automated manner how do you recover from a field very quickly because at our stage now cost of failure has become very high they say every five minute of downtime will lead to a lot of business loss so to solve that in addition to solving all the problems that we need to solve for our users for the next piece of Truth exact right and then finally any last words for it say young ingenious or starting out their careers I think uh probably like right now a bit of the environment Market is a little challenging but then I I&#39;d say more in general like people who are starting out their careers in engineering and in Tech and aspire to grow here you have been you know work it is like Sony but then also building like from scratch something like this in India uh any like I&#39;d say two three lines of summarization and learning so people sure it&#39;s fantastic time to be in text specifically in India because I think this is a time when you see lot of innovation happening and uh if you increasingly see that type of innovation which is happening it&#39;s more solving India&#39;s specific problems which will not get X elsewhere but particularly for Junior Engineers applies to senior Engineers as well but for junior Engineers I think getting involved in a startup is the best way to learn because at every stage of the of your career you&#39;ll only grow when you get a lot of ownership ownership in line with your current level there will be more than that yes yes so only if you get lot of ownership and exposure you&#39;ll be able to learn it just cannot get that level of exposure in big Tech they&#39;re just not organized to do that so only in startups obviously at least seriously it says doesn&#39;t matter you get to own so many complex problem sequence so many services so many parts of the app that helps in learning and second I think peer learning works really well so be very proactive and thoughtful about what type of side of your joining the joy because the second dimension of learning happens only through people around you make sure to write people write expertise where you can kind of get a lot of mentorship and in the beginning I think having a good Mentor helps a lot because there&#39;s so many things that can go wrong and hopefully you&#39;ll iterate and make it right but you&#39;ll have lost time so finding the right mentor and maybe Mentor at Next Level next to Next Level we really admire and aspire to become would be a right choice but having a good method is also important you know taking out your time and uh you know it was a great conversation uh that uh housing the cost in the order when I will be looking forward if your team can write a blog on that I think people are viewers might also be interested in that but yeah lovely conversation thanks again for taking out your time view it was very interesting 